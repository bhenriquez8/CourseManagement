package database;

import bean.Teacher;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class TeacherDAO {

    public static void addTeacher(Teacher teacher) throws SQLException {
        // get connection from connection pool
        Connection con =
                DatabaseConnectionFactory.getInstance().getConnection();

        try {
            final String sql = "insert into teacher (first_name, last_name, designation) values (?,?,?)";
            // create a prepared statment with an option to get autogenerated keys
            PreparedStatement stmt = con.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
            // set parameters
            stmt.setString(1, teacher.getFirstName());
            stmt.setString(2, teacher.getLastName());
            stmt.setString(3, teacher.getDesignation());

            stmt.execute();

            // get auto-generated keys
            ResultSet rs = stmt.getGeneratedKeys();

            if (rs.next()) {
                teacher.setId(rs.getInt(1));

                rs.close();
                stmt.close();
            }
        } finally {
            con.close();
        }
    }

    public List<Teacher> getTeachers() throws SQLException {
        Connection con =
                DatabaseConnectionFactory.getInstance().getConnection();

        List<Teacher> teachers = new ArrayList<Teacher>();
        Statement stmt = null;
        ResultSet rs = null;
        try {
            stmt = con.createStatement();
            // create SQL statement using left outer join
            StringBuilder sb = new StringBuilder("select teacher._id as teacherId, ")
                    .append("teacher.first_name as firstName, teacher.last_name as lastName,")
                    .append("teacher.designation as designation ")
                    .append("from teacher order by teacher.first_name");

            // execute the query
            rs = stmt.executeQuery(sb.toString());

            // iterate over result set and create Teacher objects
            while (rs.next()) {
                Teacher teacher = new Teacher();
                teacher.setId(rs.getInt("teacherId"));
                teacher.setFirstName(rs.getString("firstName"));
                teacher.setLastName(rs.getString("lastName"));
                teacher.setDesignation(rs.getString("designation"));
                teachers.add(teacher);
            }

            return teachers;
        } finally {
            try { if (rs != null) rs.close(); } catch (SQLException e) {}
            try { if (stmt != null) stmt.close();} catch (SQLException e) {}
            try { con.close();} catch (SQLException e) {}
        }
    }
}
